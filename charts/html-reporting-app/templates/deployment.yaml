apiVersion: batch/v1beta1
kind: CronJob
metadata:
    labels:
      app: {{ .Values.deploymentName }}
      release: {{ .Values.deploymentName }}
    name: {{ .Values.deploymentName }}
spec:
    concurrencyPolicy: Forbid
    failedJobsHistoryLimit: 1
    jobTemplate:
      metadata:        
        annotations:
          #container.apparmor.security.beta.kubernetes.io/kube-hunter: runtime/default
          seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
        labels:
          app: {{ .Values.deploymentName }}
          release: {{ .Values.deploymentName }}
      spec:
        template:
          metadata:
            annotations:
              #container.apparmor.security.beta.kubernetes.io/kube-hunter: runtime/default
              seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
            labels:
              app: {{ .Values.deploymentName }}
              release: {{ .Values.deploymentName }} 
              #aadpodidbinding: devops-acr-poller-contridentity # this allows the pod to run as MI in Azure.
          spec:
            #serviceAccountName: build-robot
            #nodeSelector:
                #poolname: largepool
            containers:
            - image: "{{ .Values.image.repository }}:{{ .Values.buildID }}"
              imagePullPolicy: IfNotPresent
              env:
              - name: ARM_CLIENT_ID
                value: {{ .Values.envVars.ARM_CLIENT_ID }}
              - name: ARM_TENANT_ID
                value: {{ .Values.envVars.ARM_TENANT_ID }}
              - name: ARM_CLIENT_SECRET
                value: {{ .Values.envVars.ARM_CLIENT_SECRET }}
              - name: ARM_SUBSCRIPTION_ID
                value: {{ .Values.envVars.ARM_SUBSCRIPTION_ID }}
              - name: K8S_RG_NAME
                value: {{ .Values.envVars.K8S_RG_NAME }}
              - name: K8S_NAME
                value: {{ .Values.envVars.K8S_NAME }}
              - name: SA_RG_NAME
                value: {{ .Values.envVars.SA_RG_NAME }}
              - name: SA_NAME
                value: {{ .Values.envVars.SA_NAME }}                                
              - name: SLACK_CHANNEL_TOKEN
                value: {{ .Values.envVars.SLACK_CHANNEL_TOKEN }}                                
              resources:
                limits:
                  memory: {{ .Values.resourceLimits.memory.limits }}
                  cpu: {{ .Values.resourceLimits.cpu.limits }}
                requests:
                  memory: {{ .Values.resourceLimits.memory.requests }}
                  cpu: {{ .Values.resourceLimits.cpu.requests }}
              securityContext:
                allowPrivilegeEscalation: false
                #runAsUser: 2102
                privileged: false
                #readOnlyRootFilesystem: true
              name: {{ .Values.containerName }} 
              resources: {}
            dnsPolicy: ClusterFirst
            restartPolicy: Never
            schedulerName: default-scheduler
            terminationGracePeriodSeconds: 30
    schedule: '*/1440 * * * *' #should be */1440
    successfulJobsHistoryLimit: 1
    suspend: false
  